# Linux From Scratch 宿主系统需求的中文翻译
# This file is distributed under the same license as the Linux From Scratch
# book.
# Xi Ruoyao <xry111@xry111.site>, 2021
#
msgid ""
msgstr ""
"Project-Id-Version: Linux From Scratch 11.0\n"
"Report-Msgid-Bugs-To: lfs-dev@lists.linuxfromscratch.org\n"
"POT-Creation-Date: 2024-12-03 19:51+0800\n"
"PO-Revision-Date: 2021-09-08 14:05+0800\n"
"Last-Translator: Xi Ruoyao <xry111@xry111.site>\n"
"Language-Team: none\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Bugs: https://github.com/xry111/lfs-book-i18n/issues\n"
"X-Pootle-Path: /zh_CN/lfs/chapter02/hostreqs.po\n"
"X-Pootle-Revision: 9999999\n"

#. type: Attribute 'xreflabel' of: <sect1><sect2><bridgehead>
#: lfs-en/chapter02/hostreqs.xml
msgid "Host System Requirements"
msgstr "宿主系统需求"

#. type: Content of: <sect1><sect2><title>
#: lfs-en/chapter02/hostreqs.xml
msgid "Hardware"
msgstr "硬件"

#. type: Content of: <sect1><sect2><para>
#: lfs-en/chapter02/hostreqs.xml
msgid ""
"The LFS editors recommend that the system CPU have at least four cores and "
"that the system have at least 8 GB of memory.  Older systems that do not "
"meet these requirements will still work, but the time to build packages will "
"be significantly longer than documented."
msgstr ""
"LFS 编辑建议使用有四个以上 CPU 核心和至少 8 GB 内存的硬件进行构建。不满足上述"
"条件的老旧系统仍能完成构建，但构建软件包所需的时间可能大大超过本书给出的估"
"计。"

#. type: Content of: <sect1><sect2><title>
#: lfs-en/chapter02/hostreqs.xml
msgid "Software"
msgstr "软件"

#. type: Content of: <sect1><sect2><para>
#: lfs-en/chapter02/hostreqs.xml
msgid ""
"Your host system should have the following software with the minimum "
"versions indicated. This should not be an issue for most modern Linux "
"distributions. Also note that many distributions will place software headers "
"into separate packages, often in the form of "
"<literal><replaceable>&lt;package-name&gt;</replaceable>-devel</literal> or "
"<literal><replaceable>&lt;package-name&gt;</replaceable>-dev</literal>.  Be "
"sure to install those if your distribution provides them."
msgstr ""
"您的宿主系统必须拥有下列软件，且版本不能低于我们给出的最低版本。对于大多数现"
"代 Linux 发行版来说这不成问题。要注意的是，很多发行版会把软件的头文件放在单独"
"的软件包中，这些软件包的名称往往是 <literal>&lt;软件包名&gt;-devel</literal> "
"或者 <literal>&lt;软件包名&gt;-dev</literal>。如果您的发行版为下列软件提供了"
"这类软件包，一定要安装它们。"

#. type: Content of: <sect1><sect2><para>
#: lfs-en/chapter02/hostreqs.xml
msgid ""
"Earlier versions of the listed software packages may work, but have not been "
"tested."
msgstr "比下列最低版本更古老的版本可能正常工作，但作者没有进行测试。"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid ""
"<emphasis role=\"strong\">Bash-3.2</emphasis> (/bin/sh should be a symbolic "
"or hard link to bash)"
msgstr ""
"<emphasis role=\"strong\">Bash-3.2</emphasis> (/bin/sh 必须是到 bash 的符号链"
"接或硬连接)"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid ""
"<emphasis role=\"strong\">Binutils-2.13.1</emphasis> (Versions greater than "
"&binutils-version; are not recommended as they have not been tested)"
msgstr ""
"<emphasis role=\"strong\">Binutils-2.13.1</emphasis> (比 &binutils-version; "
"更新的版本未经测试，不推荐使用)"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid ""
"<emphasis role=\"strong\">Bison-2.7</emphasis> (/usr/bin/yacc should be a "
"link to bison or a small script that executes bison)"
msgstr ""
"<emphasis role=\"strong\">Bison-2.7</emphasis> (/usr/bin/yacc 必须是到 bison "
"的链接，或者是一个执行 bison 的小脚本)"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid "<emphasis role=\"strong\">Coreutils-8.1</emphasis>"
msgstr "<emphasis role=\"strong\">Coreutils-8.1</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid "<emphasis role=\"strong\">Diffutils-2.8.1</emphasis>"
msgstr "<emphasis role=\"strong\">Diffutils-2.8.1</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid "<emphasis role=\"strong\">Findutils-4.2.31</emphasis>"
msgstr "<emphasis role=\"strong\">Findutils-4.2.31</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid ""
"<emphasis role=\"strong\">Gawk-4.0.1</emphasis> (/usr/bin/awk should be a "
"link to gawk)"
msgstr ""
"<emphasis role=\"strong\">Gawk-4.0.1</emphasis> (/usr/bin/awk 必须是到 gawk "
"的链接)"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid ""
"<emphasis role=\"strong\">GCC-5.2</emphasis> including the C++ compiler, "
"<command>g++</command> (Versions greater than &gcc-version; are not "
"recommended as they have not been tested). C and C++ standard libraries "
"(with headers) must also be present so the C++ compiler can build hosted "
"programs"
msgstr ""
"<emphasis role=\"strong\">GCC-5.2</emphasis>，包括 C++ 编译器 <command>g++</"
"command> (比 &gcc-version; 更新的版本未经测试，不推荐使用)。C 和 C++ 标准库 "
"(包括头文件) 也必须可用，这样 C++ 编译器才能构建宿主环境的程序"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid "<emphasis role=\"strong\">Grep-2.5.1a</emphasis>"
msgstr "<emphasis role=\"strong\">Grep-2.5.1a</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid "<emphasis role=\"strong\">Gzip-1.3.12</emphasis>"
msgstr "<emphasis role=\"strong\">Gzip-1.3.12</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid "<emphasis role=\"strong\">Linux Kernel-&min-kernel;</emphasis>"
msgstr "<emphasis role=\"strong\">Linux Kernel-&min-kernel;</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid ""
"The reason for the kernel version requirement is that we specify that "
"version when building <application>glibc</application> in <xref "
"linkend=\"chapter-cross-tools\"/> and <xref linkend=\"chapter-building-"
"system\"/>, so the workarounds for older kernels are not enabled and the "
"compiled <application>glibc</application> is slightly faster and smaller.  "
"As at Feb 2024, &min-kernel; is the oldest kernel release still supported by "
"the kernel developers.  Some kernel releases older than &min-kernel; may be "
"still supported by third-party teams, but they are not considered official "
"upstream kernel releases; read <ulink url='https://kernel.org/category/"
"releases.html'/> for the details."
msgstr ""
"内核版本的要求是为了符合我们在<xref linkend=\"chapter-cross-tools\"/>和<xref "
"linkend=\"chapter-building-system\"/>中编译 <application>glibc</application> "
"时的设置，这样可以禁用为旧版内核设计的变通措施，使得编译得到的 "
"<application>glibc</application> 运行稍快，且占用空间稍小。截至 2024 年 2 "
"月，&min-kernel; 是内核开发者仍然提供支持的最老内核版本。一些比 &min-kernel; "
"更老的内核可能被第三方团队支持，但它们不被视为上游正式发布的内核版本；详见 "
"<ulink url='https://kernel.org/category/releases.html'/>。"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid ""
"If the host kernel is earlier than &min-kernel; you will need to replace the "
"kernel with a more up-to-date version. There are two ways you can go about "
"this. First, see if your Linux vendor provides a &min-kernel; or later "
"kernel package. If so, you may wish to install it. If your vendor doesn't "
"offer an acceptable kernel package, or you would prefer not to install it, "
"you can compile a kernel yourself. Instructions for compiling the kernel and "
"configuring the boot loader (assuming the host uses GRUB) are located in "
"<xref linkend=\"chapter-bootable\"/>."
msgstr ""
"如果宿主内核比 &min-kernel; 更早，您需要将内核升级到较新的版本。升级内核有两"
"种方法，如果您的发行版供应商提供了 &min-kernel; 或更新的内核软件包，您可以直"
"接安装它。如果供应商没有提供一个足够新的内核包，或者您不想安装它，您可以自己"
"编译内核。编译内核和配置启动引导器 (假设宿主使用 GRUB)  的步骤在<xref "
"linkend=\"chapter-bootable\"/>中。"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid ""
"We require the host kernel to support UNIX 98 pseudo terminal (PTY).  It "
"should be enabled on all desktop or server distros shipping Linux &min-"
"kernel; or a newer kernel. If you are building a custom host kernel, ensure "
"<option>CONFIG_UNIX98_PTYS</option> is set to <literal>y</literal> in the "
"kernel configuration."
msgstr ""
"我们需要宿主系统支持 UNIX 98 伪终端 (PTY)。这项功能在所有使用 Linux &min-"
"kernel; 或更新内核的桌面或服务器发行版中应该已经启用。如果您要构建自定义的宿"
"主内核，需要确认在内核配置中 <option>CONFIG_UNIX98_PTYS</option> 选项被设为 "
"<literal>y</literal>。"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid "<emphasis role=\"strong\">M4-1.4.10</emphasis>"
msgstr "<emphasis role=\"strong\">M4-1.4.10</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid "<emphasis role=\"strong\">Make-4.0</emphasis>"
msgstr "<emphasis role=\"strong\">Make-4.0</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid "<emphasis role=\"strong\">Patch-2.5.4</emphasis>"
msgstr "<emphasis role=\"strong\">Patch-2.5.4</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid "<emphasis role=\"strong\">Perl-5.8.8</emphasis>"
msgstr "<emphasis role=\"strong\">Perl-5.8.8</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid "<emphasis role=\"strong\">Python-3.4</emphasis>"
msgstr "<emphasis role=\"strong\">Python-3.4</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid "<emphasis role=\"strong\">Sed-4.1.5</emphasis>"
msgstr "<emphasis role=\"strong\">Sed-4.1.5</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid "<emphasis role=\"strong\">Tar-1.22</emphasis>"
msgstr "<emphasis role=\"strong\">Tar-1.22</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid "<emphasis role=\"strong\">Texinfo-5.0</emphasis>"
msgstr "<emphasis role=\"strong\">Texinfo-5.0</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml
msgid "<emphasis role=\"strong\">Xz-5.0.0</emphasis>"
msgstr "<emphasis role=\"strong\">Xz-5.0.0</emphasis>"

#. type: Content of: <sect1><sect2><important><para>
#: lfs-en/chapter02/hostreqs.xml
msgid ""
"Note that the symlinks mentioned above are required to build an LFS system "
"using the instructions contained within this book. Symlinks that point to "
"other software (such as dash, mawk, etc.) may work, but are not tested or "
"supported by the LFS development team, and may require either deviation from "
"the instructions or additional patches to some packages."
msgstr ""
"上面要求的符号链接是根据本书构建 LFS 的充分条件，不是必要条件。链接指向其他软"
"件 (如 dash 或 mawk 等) 可能不会引发问题，但 LFS 开发团队没有尝试过这种做法，"
"也无法提供帮助。对于一些软件包来说，您可能需要修改本书中的指令或者使用额外的"
"补丁，才能在这类宿主环境成功构建。"

#. type: Content of: <sect1><sect2><para>
#: lfs-en/chapter02/hostreqs.xml
msgid ""
"To see whether your host system has all the appropriate versions, and the "
"ability to compile programs, run the following commands:"
msgstr ""
"为了确定您的宿主系统拥有每个软件的合适版本，且能够编译程序，请运行下列命令："

#. type: Content of: <sect1><sect2><screen>
#: lfs-en/chapter02/hostreqs.xml
#, no-wrap
msgid ""
"<?dbfo keep-together=\"auto\"?><userinput>cat &gt; version-check.sh &lt;&lt; \"EOF\"\n"
"<literal>#!/bin/bash\n"
"# A script to list version numbers of critical development tools\n"
"\n"
"# If you have tools installed in other directories, adjust PATH here AND\n"
"# in ~lfs/.bashrc (section 4.4) as well.\n"
"\n"
"LC_ALL=C \n"
"PATH=/usr/bin:/bin\n"
"\n"
"bail() { echo \"FATAL: $1\"; exit 1; }\n"
"grep --version > /dev/null 2> /dev/null || bail \"grep does not work\"\n"
"sed '' /dev/null || bail \"sed does not work\"\n"
"sort   /dev/null || bail \"sort does not work\"\n"
"\n"
"ver_check()\n"
"{\n"
"   if ! type -p $2 &amp;>/dev/null\n"
"   then \n"
"     echo \"ERROR: Cannot find $2 ($1)\"; return 1; \n"
"   fi\n"
"   v=$($2 --version 2>&amp;1 | grep -E -o '[0-9]+\\.[0-9\\.]+[a-z]*' | head -n1)\n"
"   if printf '%s\\n' $3 $v | sort --version-sort --check &amp;>/dev/null\n"
"   then \n"
"     printf \"OK:    %-9s %-6s >= $3\\n\" \"$1\" \"$v\"; return 0;\n"
"   else \n"
"     printf \"ERROR: %-9s is TOO OLD ($3 or later required)\\n\" \"$1\"; \n"
"     return 1; \n"
"   fi\n"
"}\n"
"\n"
"ver_kernel()\n"
"{\n"
"   kver=$(uname -r | grep -E -o '^[0-9\\.]+')\n"
"   if printf '%s\\n' $1 $kver | sort --version-sort --check &amp;>/dev/null\n"
"   then \n"
"     printf \"OK:    Linux Kernel $kver >= $1\\n\"; return 0;\n"
"   else \n"
"     printf \"ERROR: Linux Kernel ($kver) is TOO OLD ($1 or later required)\\n\" \"$kver\"; \n"
"     return 1; \n"
"   fi\n"
"}\n"
"\n"
"# Coreutils first because --version-sort needs Coreutils >= 7.0\n"
"ver_check Coreutils      sort     8.1 || bail \"Coreutils too old, stop\"\n"
"ver_check Bash           bash     3.2\n"
"ver_check Binutils       ld       2.13.1\n"
"ver_check Bison          bison    2.7\n"
"ver_check Diffutils      diff     2.8.1\n"
"ver_check Findutils      find     4.2.31\n"
"ver_check Gawk           gawk     4.0.1\n"
"ver_check GCC            gcc      5.2\n"
"ver_check \"GCC (C++)\"    g++      5.2\n"
"ver_check Grep           grep     2.5.1a\n"
"ver_check Gzip           gzip     1.3.12\n"
"ver_check M4             m4       1.4.10\n"
"ver_check Make           make     4.0\n"
"ver_check Patch          patch    2.5.4\n"
"ver_check Perl           perl     5.8.8\n"
"ver_check Python         python3  3.4\n"
"ver_check Sed            sed      4.1.5\n"
"ver_check Tar            tar      1.22\n"
"ver_check Texinfo        texi2any 5.0\n"
"ver_check Xz             xz       5.0.0\n"
"ver_kernel &min-kernel;\n"
"\n"
"if mount | grep -q 'devpts on /dev/pts' &amp;&amp; [ -e /dev/ptmx ]\n"
"then echo \"OK:    Linux Kernel supports UNIX 98 PTY\";\n"
"else echo \"ERROR: Linux Kernel does NOT support UNIX 98 PTY\"; fi\n"
"\n"
"alias_check() {\n"
"   if $1 --version 2>&amp;1 | grep -qi $2\n"
"   then printf \"OK:    %-4s is $2\\n\" \"$1\";\n"
"   else printf \"ERROR: %-4s is NOT $2\\n\" \"$1\"; fi\n"
"}\n"
"echo \"Aliases:\"\n"
"alias_check awk GNU\n"
"alias_check yacc Bison\n"
"alias_check sh Bash\n"
"\n"
"echo \"Compiler check:\"\n"
"if printf \"int main(){}\" | g++ -x c++ -\n"
"then echo \"OK:    g++ works\";\n"
"else echo \"ERROR: g++ does NOT work\"; fi\n"
"rm -f a.out\n"
"\n"
"if [ \"$(nproc)\" = \"\" ]; then\n"
"   echo \"ERROR: nproc is not available or it produces empty output\"\n"
"else\n"
"   echo \"OK: nproc reports $(nproc) logical cores are available\"\n"
"fi</literal>\n"
"EOF\n"
"\n"
"bash version-check.sh</userinput>"
msgstr ""
"<?dbfo keep-together=\"auto\"?><userinput>cat &gt; version-check.sh &lt;&lt; \"EOF\"\n"
"<literal>#!/bin/bash\n"
"# A script to list version numbers of critical development tools\n"
"\n"
"# If you have tools installed in other directories, adjust PATH here AND\n"
"# in ~lfs/.bashrc (section 4.4) as well.\n"
"\n"
"LC_ALL=C \n"
"PATH=/usr/bin:/bin\n"
"\n"
"bail() { echo \"FATAL: $1\"; exit 1; }\n"
"grep --version > /dev/null 2> /dev/null || bail \"grep does not work\"\n"
"sed '' /dev/null || bail \"sed does not work\"\n"
"sort   /dev/null || bail \"sort does not work\"\n"
"\n"
"ver_check()\n"
"{\n"
"   if ! type -p $2 &amp;>/dev/null\n"
"   then \n"
"     echo \"ERROR: Cannot find $2 ($1)\"; return 1; \n"
"   fi\n"
"   v=$($2 --version 2>&amp;1 | grep -E -o '[0-9]+\\.[0-9\\.]+[a-z]*' | head -n1)\n"
"   if printf '%s\\n' $3 $v | sort --version-sort --check &amp;>/dev/null\n"
"   then \n"
"     printf \"OK:    %-9s %-6s >= $3\\n\" \"$1\" \"$v\"; return 0;\n"
"   else \n"
"     printf \"ERROR: %-9s is TOO OLD ($3 or later required)\\n\" \"$1\"; \n"
"     return 1; \n"
"   fi\n"
"}\n"
"\n"
"ver_kernel()\n"
"{\n"
"   kver=$(uname -r | grep -E -o '^[0-9\\.]+')\n"
"   if printf '%s\\n' $1 $kver | sort --version-sort --check &amp;>/dev/null\n"
"   then \n"
"     printf \"OK:    Linux Kernel $kver >= $1\\n\"; return 0;\n"
"   else \n"
"     printf \"ERROR: Linux Kernel ($kver) is TOO OLD ($1 or later required)\\n\" \"$kver\"; \n"
"     return 1; \n"
"   fi\n"
"}\n"
"\n"
"# Coreutils first because --version-sort needs Coreutils >= 7.0\n"
"ver_check Coreutils      sort     8.1 || bail \"Coreutils too old, stop\"\n"
"ver_check Bash           bash     3.2\n"
"ver_check Binutils       ld       2.13.1\n"
"ver_check Bison          bison    2.7\n"
"ver_check Diffutils      diff     2.8.1\n"
"ver_check Findutils      find     4.2.31\n"
"ver_check Gawk           gawk     4.0.1\n"
"ver_check GCC            gcc      5.2\n"
"ver_check \"GCC (C++)\"    g++      5.2\n"
"ver_check Grep           grep     2.5.1a\n"
"ver_check Gzip           gzip     1.3.12\n"
"ver_check M4             m4       1.4.10\n"
"ver_check Make           make     4.0\n"
"ver_check Patch          patch    2.5.4\n"
"ver_check Perl           perl     5.8.8\n"
"ver_check Python         python3  3.4\n"
"ver_check Sed            sed      4.1.5\n"
"ver_check Tar            tar      1.22\n"
"ver_check Texinfo        texi2any 5.0\n"
"ver_check Xz             xz       5.0.0\n"
"ver_kernel &min-kernel;\n"
"\n"
"if mount | grep -q 'devpts on /dev/pts' &amp;&amp; [ -e /dev/ptmx ]\n"
"then echo \"OK:    Linux Kernel supports UNIX 98 PTY\";\n"
"else echo \"ERROR: Linux Kernel does NOT support UNIX 98 PTY\"; fi\n"
"\n"
"alias_check() {\n"
"   if $1 --version 2>&amp;1 | grep -qi $2\n"
"   then printf \"OK:    %-4s is $2\\n\" \"$1\";\n"
"   else printf \"ERROR: %-4s is NOT $2\\n\" \"$1\"; fi\n"
"}\n"
"echo \"Aliases:\"\n"
"alias_check awk GNU\n"
"alias_check yacc Bison\n"
"alias_check sh Bash\n"
"\n"
"echo \"Compiler check:\"\n"
"if printf \"int main(){}\" | g++ -x c++ -\n"
"then echo \"OK:    g++ works\";\n"
"else echo \"ERROR: g++ does NOT work\"; fi\n"
"rm -f a.out\n"
"\n"
"if [ \"$(nproc)\" = \"\" ]; then\n"
"   echo \"ERROR: nproc is not available or it produces empty output\"\n"
"else\n"
"   echo \"OK: nproc reports $(nproc) logical cores are available\"\n"
"fi</literal>\n"
"EOF\n"
"\n"
"bash version-check.sh</userinput>"
