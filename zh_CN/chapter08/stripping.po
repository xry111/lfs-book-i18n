# Linux From Scratch 移除调试符号页面的中文翻译
# This file is distributed under the same license as the Linux From Scratch
# book.
# Xi Ruoyao <xry111@xry111.site>, 2021
#
msgid ""
msgstr ""
"Project-Id-Version: Linux From Scratch 11.0\n"
"Report-Msgid-Bugs-To: lfs-dev@lists.linuxfromscratch.org\n"
"POT-Creation-Date: 2025-08-09 17:52+0800\n"
"PO-Revision-Date: 2021-01-20 21:26+0800\n"
"Last-Translator: Xi Ruoyao <xry111@xry111.site>\n"
"Language-Team: none\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Bugs: https://github.com/xry111/lfs-book-i18n/issues\n"
"X-Pootle-Revision: 9999999\n"
"X-Pootle-Path: /zh_CN/lfs/chapter08/util-linux.po\n"

#. type: Content of: <sect1><title>
#: lfs-en/chapter08/stripping.xml
msgid "Stripping"
msgstr "移除调试符号"

#. type: Content of: <sect1><para>
#: lfs-en/chapter08/stripping.xml
msgid ""
"This section is optional.  If the intended user is not a programmer and does "
"not plan to do any debugging of the system software, the system's size can "
"be decreased by some 2 GB by removing the debugging symbols, and some "
"unnecessary symbol table entries, from binaries and libraries. This causes "
"no real inconvenience for a typical Linux user."
msgstr ""
"本节是可选的。如果系统不是为程序员设计的，也没有调试系统软件的计划，可以通过"
"从二进制程序和库移除调试符号和不必要的符号表项，将系统的体积减小约 2 GB。对于"
"一般的 Linux 用户，这不会造成任何不便。"

#. type: Content of: <sect1><para>
#: lfs-en/chapter08/stripping.xml
msgid ""
"Most people who use the commands mentioned below do not experience any "
"difficulties. However, it is easy to make a mistake and render the new "
"system unusable. So before running the <command>strip</command> commands, it "
"is a good idea to make a backup of the LFS system in its current state."
msgstr ""
"大多数使用以下命令的用户不会遇到什么困难。但是，如果打错了命令，很容易导致新"
"系统无法使用。因此，在运行 <command>strip</command> 命令前，最好备份 LFS 系统"
"的当前状态。"

#. type: Content of: <sect1><para>
#: lfs-en/chapter08/stripping.xml
msgid ""
"A <command>strip</command> command with the <parameter>--strip-unneeded</"
"parameter> option removes all debug symbols from a binary or library.  It "
"also removes all symbol table entries not normally needed by the linker (for "
"static libraries) or dynamic linker (for dynamically linked binaries and "
"shared libraries). Using <parameter>--strip-debug</parameter> does not "
"remove symbol table entries that may be needed by some applications.  The "
"difference between <literal>unneeded</literal> and <literal>debug</literal> "
"is very small.  For example, an unstripped <filename "
"class='libraryfile'>libc.a</filename> is 22.4 MB. After stripping with "
"<parameter>--strip-debug</parameter> it is 5.9 MB. Using <parameter>--strip-"
"unneeded</parameter> only reduces the size further to 5.8 MB."
msgstr ""
"<command>strip</command> 命令的 <parameter>--strip-unneeded</parameter>选项从"
"程序或库中移除所有调试符号。它也会移除所有链接器 (对于静态库) 或动态链接器 "
"(对于动态链接的程序和共享库) 不需要的符号表项。<parameter>--strip-debug</"
"parameter> 选项则不会移除符号表项。一些程序可能需要这些符号表项，而且 "
"<literal>unneeded</literal> 和 <literal>debug</literal> 相比，进一步节省存储"
"空间的效果并不明显。例如，原始的 libc.a 有 22.4 MB。使用 <parameter>--strip-"
"debug</parameter> 移除调试符号后，其大小为 5.9 MB。而使用 <parameter>--strip-"
"unneeded</parameter> 只会将其进一步缩减到 5.8 MB。"

#. type: Content of: <sect1><para>
#: lfs-en/chapter08/stripping.xml
msgid ""
"The debugging symbols from selected libraries are compressed with "
"<application>Zstd</application> and preserved in separate files.  That "
"debugging information is needed to run regression tests with <ulink "
"url='&blfs-book;/general/valgrind.html'>valgrind</ulink> or <ulink "
"url='&blfs-book;/general/gdb.html'>gdb</ulink> later, in BLFS."
msgstr ""
"下面将一些库的调试符号使用 <application>Zstd</application> 压缩并保存在单独的"
"文件中。后续在 BLFS 中，一些软件包的测试套件使用了 <ulink url='&blfs-book;/"
"general/valgrind.html'>valgrind</ulink> 或 <ulink url='&blfs-book;/general/"
"gdb.html'>gdb</ulink> 运行退化测试，它们需要这些调试信息。"

#. type: Content of: <sect1><para>
#: lfs-en/chapter08/stripping.xml
msgid ""
"Note that <command>strip</command> will overwrite the binary or library file "
"it is processing.  This can crash the processes using code or data from the "
"file.  If the process running <command>strip</command> is affected, the "
"binary or library being stripped can be destroyed; this can make the system "
"completely unusable.  To avoid this problem we copy some libraries and "
"binaries into <filename class=\"directory\">/tmp</filename>, strip them "
"there, then reinstall them with the <command>install</command> command.  "
"(The related entry in <xref linkend=\"pkgmgmt-upgrade-issues\"/> gives the "
"rationale for using the <command>install</command> command here.)"
msgstr ""
"需要注意的是，<command>strip</command> 命令会覆盖它正在处理的二进制程序或库文"
"件。这可能导致正在使用该文件中代码或数据的进程崩溃。如果运行 <command>strip</"
"command> 的进程受到影响，则可能导致正在被处理的程序或库完全损坏；这可能导致系"
"统完全不可用。为了避免这种情况，将一些库和程序复制到 <filename "
"class=\"directory\">/tmp</filename> 中，在那里移除调试符号，再使用 "
"<command>install</command> 命令重新安装它们。(<xref linkend=\"pkgmgmt-"
"upgrade-issues\"/> 中的相关条目介绍了使用 <command>install</command> 命令的原"
"因。)"

#. type: Content of: <sect1><note><para>
#: lfs-en/chapter08/stripping.xml
msgid ""
"The ELF loader's name may vary on different systems.  The construct below "
"selects the correct name for the current architecture, excluding anything "
"ending with <literal>g</literal>, in case the commands below have already "
"been run."
msgstr ""
"ELF 加载器的文件名在不同系统上可能不同。下面的命令会为当前架构选择正确的文件"
"名，并排除以 <literal>g</literal> 结尾的文件。"

#. type: Content of: <sect1><important><para>
#: lfs-en/chapter08/stripping.xml
msgid ""
"If there is any package whose version is different from the version "
"specified by the book (either following a security advisory or satisfying "
"personal preference), it may be necessary to update the library file name in "
"<envar>save_usrlib</envar> or <envar>online_usrlib</envar>.  <emphasis "
"role='bold'>Failing to do so may render the system completely unusable.</"
"emphasis>"
msgstr ""
"在构建过程中，如果任何一个软件包的版本和本书指定的版本不同 (无论是依照安全公"
"告的要求还是为了满足个人需求)，则可能需要更新 <envar>save_usrlib</envar> 或"
"者 <envar>online_usrlib</envar> 中的库文件名。<emphasis role='bold'>否则可能"
"导致系统完全无法使用。</emphasis>"

#.  also of interest are libgfortan, libgo, libgomp, and libobjc from GCC 
#. <screen>
#. <userinput>save_lib="ld-2.25.so libc-2.25.so libpthread-2.25.so libthread_db-1.0.so"
#. type: Content of: <sect1><screen>
#: lfs-en/chapter08/stripping.xml
#, no-wrap
msgid ""
"<userinput>save_usrlib=\"$(cd /usr/lib; ls ld-linux*[^g])\n"
"             libc.so.6\n"
"             libthread_db.so.1\n"
"             libquadmath.so.&libquadmath-version;\n"
"             libstdc++.so.&libstdcpp-version;\n"
"             libitm.so.&libitm-version;\n"
"             libatomic.so.&libatomic-version;\"\n"
"\n"
"cd /usr/lib\n"
"\n"
"for LIB in $save_usrlib; do\n"
"    objcopy --only-keep-debug --compress-debug-sections=zstd $LIB $LIB.dbg\n"
"    cp $LIB /tmp/$LIB\n"
"    strip --strip-debug /tmp/$LIB\n"
"    objcopy --add-gnu-debuglink=$LIB.dbg /tmp/$LIB\n"
"    install -vm755 /tmp/$LIB /usr/lib\n"
"    rm /tmp/$LIB\n"
"done\n"
"\n"
"online_usrbin=\"bash find strip\"\n"
"online_usrlib=\"libbfd-&binutils-version;.so\n"
"               libsframe.so.&libsframe-version;\n"
"               libhistory.so.&readline-soversion;\n"
"               libncursesw.so.&ncurses-base-version;\n"
"               libm.so.6\n"
"               libreadline.so.&readline-soversion;\n"
"               libz.so.&zlib-version;\n"
"               libzstd.so.&zstd-version;\n"
"               $(cd /usr/lib; find libnss*.so* -type f)\"\n"
"\n"
"for BIN in $online_usrbin; do\n"
"    cp /usr/bin/$BIN /tmp/$BIN\n"
"    strip --strip-debug /tmp/$BIN\n"
"    install -vm755 /tmp/$BIN /usr/bin\n"
"    rm /tmp/$BIN\n"
"done\n"
"\n"
"for LIB in $online_usrlib; do\n"
"    cp /usr/lib/$LIB /tmp/$LIB\n"
"    strip --strip-debug /tmp/$LIB\n"
"    install -vm755 /tmp/$LIB /usr/lib\n"
"    rm /tmp/$LIB\n"
"done\n"
"\n"
"for i in $(find /usr/lib -type f -name \\*.so* ! -name \\*dbg) \\\n"
"         $(find /usr/lib -type f -name \\*.a)                 \\\n"
"         $(find /usr/{bin,sbin,libexec} -type f); do\n"
"    case \"$online_usrbin $online_usrlib $save_usrlib\" in\n"
"        *$(basename $i)* )\n"
"            ;;\n"
"        * ) strip --strip-debug $i\n"
"            ;;\n"
"    esac\n"
"done\n"
"\n"
"unset BIN LIB save_usrlib online_usrbin online_usrlib\n"
"</userinput>"
msgstr ""
"<userinput>save_usrlib=\"$(cd /usr/lib; ls ld-linux*[^g])\n"
"             libc.so.6\n"
"             libthread_db.so.1\n"
"             libquadmath.so.&libquadmath-version;\n"
"             libstdc++.so.&libstdcpp-version;\n"
"             libitm.so.&libitm-version;\n"
"             libatomic.so.&libatomic-version;\"\n"
"\n"
"cd /usr/lib\n"
"\n"
"for LIB in $save_usrlib; do\n"
"    objcopy --only-keep-debug --compress-debug-sections=zstd $LIB $LIB.dbg\n"
"    cp $LIB /tmp/$LIB\n"
"    strip --strip-debug /tmp/$LIB\n"
"    objcopy --add-gnu-debuglink=$LIB.dbg /tmp/$LIB\n"
"    install -vm755 /tmp/$LIB /usr/lib\n"
"    rm /tmp/$LIB\n"
"done\n"
"\n"
"online_usrbin=\"bash find strip\"\n"
"online_usrlib=\"libbfd-&binutils-version;.so\n"
"               libsframe.so.&libsframe-version;\n"
"               libhistory.so.&readline-soversion;\n"
"               libncursesw.so.&ncurses-base-version;\n"
"               libm.so.6\n"
"               libreadline.so.&readline-soversion;\n"
"               libz.so.&zlib-version;\n"
"               libzstd.so.&zstd-version;\n"
"               $(cd /usr/lib; find libnss*.so* -type f)\"\n"
"\n"
"for BIN in $online_usrbin; do\n"
"    cp /usr/bin/$BIN /tmp/$BIN\n"
"    strip --strip-debug /tmp/$BIN\n"
"    install -vm755 /tmp/$BIN /usr/bin\n"
"    rm /tmp/$BIN\n"
"done\n"
"\n"
"for LIB in $online_usrlib; do\n"
"    cp /usr/lib/$LIB /tmp/$LIB\n"
"    strip --strip-debug /tmp/$LIB\n"
"    install -vm755 /tmp/$LIB /usr/lib\n"
"    rm /tmp/$LIB\n"
"done\n"
"\n"
"for i in $(find /usr/lib -type f -name \\*.so* ! -name \\*dbg) \\\n"
"         $(find /usr/lib -type f -name \\*.a)                 \\\n"
"         $(find /usr/{bin,sbin,libexec} -type f); do\n"
"    case \"$online_usrbin $online_usrlib $save_usrlib\" in\n"
"        *$(basename $i)* )\n"
"            ;;\n"
"        * ) strip --strip-debug $i\n"
"            ;;\n"
"    esac\n"
"done\n"
"\n"
"unset BIN LIB save_usrlib online_usrbin online_usrlib\n"
"</userinput>"

#. type: Content of: <sect1><para>
#: lfs-en/chapter08/stripping.xml
msgid ""
"A large number of files will be flagged as errors because their file format "
"is not recognized. These warnings can be safely ignored. They indicate that "
"those files are scripts, not binaries."
msgstr ""
"这里会产生关于很多文件的错误信息，因为无法识别这些文件的格式。这些警告可以安"
"全地忽略。它们表明那些文件是脚本文件，而不是二进制文件。"
